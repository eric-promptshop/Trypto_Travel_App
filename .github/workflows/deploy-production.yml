name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      rollout_percentage:
        description: 'Rollout percentage (0-100)'
        required: false
        default: '0'
      enable_new_service:
        description: 'Enable new tour service'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        env:
          CI: true
      
      - name: Run type check
        run: npm run type-check || true
      
      - name: Run lint
        run: npm run lint || true

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Set deployment environment variables
        run: |
          # Service Migration Feature Flags - DISABLED by default
          echo "NEXT_PUBLIC_USE_NEW_TOUR_SERVICE=${{ github.event.inputs.enable_new_service || 'false' }}" >> .env.production
          echo "NEXT_PUBLIC_USE_NEW_ITINERARY_SERVICE=false" >> .env.production
          echo "NEXT_PUBLIC_USE_NEW_LEAD_SERVICE=false" >> .env.production
          echo "NEXT_PUBLIC_USE_NEW_USER_SERVICE=false" >> .env.production
          
          # Rollout Configuration
          echo "NEXT_PUBLIC_ROLLOUT_PERCENTAGE=${{ github.event.inputs.rollout_percentage || '0' }}" >> .env.production
          echo "NEXT_PUBLIC_ROLLOUT_STRATEGY=percentage" >> .env.production
          echo 'NEXT_PUBLIC_INTERNAL_USERS=["@tripnav.com"]' >> .env.production
          
          # Feature Flags
          echo "NEXT_PUBLIC_ENABLE_TOUR_TEMPLATES=false" >> .env.production
          echo "NEXT_PUBLIC_ENABLE_AI_RECOMMENDATIONS=true" >> .env.production
          echo "NEXT_PUBLIC_ENABLE_ADVANCED_ANALYTICS=false" >> .env.production
          echo "NEXT_PUBLIC_ENABLE_MULTI_LANGUAGE=false" >> .env.production
          
          # Performance Flags
          echo "NEXT_PUBLIC_ENABLE_CACHING=true" >> .env.production
          echo "NEXT_PUBLIC_ENABLE_LAZY_LOADING=true" >> .env.production
          echo "NEXT_PUBLIC_ENABLE_PERFORMANCE_MONITORING=true" >> .env.production
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          deployment_url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$deployment_url" >> $GITHUB_OUTPUT
      
      - name: Create deployment record
        run: |
          mkdir -p deployments
          cat > deployments/deployment-$(date +%Y%m%d-%H%M%S).json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "version": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "environment": "production",
            "deployment_url": "${{ steps.deploy.outputs.deployment_url }}",
            "features": {
              "USE_NEW_TOUR_SERVICE": ${{ github.event.inputs.enable_new_service || 'false' }},
              "ROLLOUT_PERCENTAGE": ${{ github.event.inputs.rollout_percentage || '0' }}
            },
            "deployer": "${{ github.actor }}",
            "workflow_run": "${{ github.run_id }}"
          }
          EOF
      
      - name: Upload deployment record
        uses: actions/upload-artifact@v4
        with:
          name: deployment-record
          path: deployments/

  health-check:
    name: Post-Deployment Health Check
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Wait for deployment to be ready
        run: sleep 30
      
      - name: Check health endpoint
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://travel-itinerary-builder.vercel.app/api/v1/tours/health)
          if [ "$response" = "200" ]; then
            echo "✅ Health check passed"
          else
            echo "❌ Health check failed with status: $response"
            exit 1
          fi
      
      - name: Check old API compatibility
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://travel-itinerary-builder.vercel.app/api/tour-operator/tours)
          if [ "$response" = "200" ] || [ "$response" = "401" ]; then
            echo "✅ Old API still accessible"
          else
            echo "⚠️  Old API returned status: $response"
          fi
      
      - name: Post deployment summary
        uses: actions/github-script@v6
        with:
          script: |
            const summary = `## 🚀 Production Deployment Complete
            
            - **Version**: \`${{ github.sha }}\`
            - **New Service Enabled**: ${{ github.event.inputs.enable_new_service || 'false' }}
            - **Rollout Percentage**: ${{ github.event.inputs.rollout_percentage || '0' }}%
            - **Deployed by**: @${{ github.actor }}
            
            ### Next Steps:
            1. Check monitoring dashboard: https://travel-itinerary-builder.vercel.app/admin/monitoring
            2. Verify health endpoint: https://travel-itinerary-builder.vercel.app/api/v1/tours/health
            3. Monitor error rates in Sentry
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number || 1,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            }).catch(() => {
              console.log('No PR/issue to comment on');
            });